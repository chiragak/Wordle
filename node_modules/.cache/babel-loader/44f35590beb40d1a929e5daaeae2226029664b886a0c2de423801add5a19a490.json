{"ast":null,"code":"var _jsxFileName = \"/home/chirag/Documents/GitHub/wordle/src/Wordle.jsx\",\n  _s = $RefreshSig$();\n// Wordle.jsx\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport confetti from 'canvas-confetti';\nimport { generateWordSet, evaluateGuess } from './gameLogic';\nimport './Wordle.css';\nimport gameplaySound from './assets/gameplay.mp3';\nimport gameoverSound from './assets/gameover.mp3';\nimport gamewinSound from './assets/gamewin.mp3';\nimport soundOnIcon from './assets/sound-on.svg';\nimport soundOffIcon from './assets/sound-off.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORD_LENGTH = 5;\nconst MAX_GUESSES = 6;\nconst keyboardColors = ['#FF0000', '#FF3300', '#FF6600', '#FF9900', '#FFCC00', '#FFFF00', '#CCFF00', '#99FF00', '#66FF00', '#33FF00'];\nconst Wordle = () => {\n  _s();\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState('');\n  const [guesses, setGuesses] = useState(Array(MAX_GUESSES).fill(''));\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [isSoundOn, setIsSoundOn] = useState(false);\n  const [gameplayAudio] = useState(new Audio(gameplaySound));\n  const [gameoverAudio] = useState(new Audio(gameoverSound));\n  const [gamewinAudio] = useState(new Audio(gamewinSound));\n  useEffect(() => {\n    gameplayAudio.loop = true;\n    return () => {\n      gameplayAudio.pause();\n    };\n  }, []);\n  useEffect(() => {\n    if (isSoundOn) {\n      gameplayAudio.play().catch(error => console.error('Failed to play gameplay audio:', error));\n    } else {\n      gameplayAudio.pause();\n    }\n  }, [isSoundOn]);\n  useEffect(() => {\n    const fetchWord = async () => {\n      setLoading(true);\n      const {\n        wordSet,\n        todaysWord\n      } = await generateWordSet();\n      setWordSet(wordSet);\n      setCorrectWord(todaysWord);\n      setLoading(false);\n    };\n    fetchWord();\n  }, []);\n  const handleKeyPress = useCallback(key => {\n    if (gameOver || loading) return;\n    if (key === 'ENTER' || key === 'Enter') {\n      if (currentGuess.length !== WORD_LENGTH) return;\n      if (!wordSet.has(currentGuess.toUpperCase())) {\n        alert('Not in word list');\n        return;\n      }\n      const newGuesses = [...guesses];\n      newGuesses[guesses.findIndex(guess => guess === '')] = currentGuess.toUpperCase();\n      setGuesses(newGuesses);\n      setCurrentGuess('');\n      if (currentGuess.toUpperCase() === correctWord) {\n        setGameOver(true);\n        triggerConfetti();\n        playGamewinSound();\n        alert('You won!');\n      } else if (newGuesses[MAX_GUESSES - 1] !== '') {\n        setGameOver(true);\n        playGameoverSound();\n        alert(`Game over! The word was ${correctWord}`);\n      } else {\n        playGameplaySound();\n      }\n    } else if (key === 'BACK' || key === 'Backspace') {\n      setCurrentGuess(prev => prev.slice(0, -1));\n    } else if (currentGuess.length < WORD_LENGTH && key.length === 1 && key.match(/[a-z]/i)) {\n      setCurrentGuess(prev => prev + key.toUpperCase());\n    }\n  }, [currentGuess, guesses, wordSet, correctWord, gameOver, loading]);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      handleKeyPress(event.key);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyPress]);\n  const keyboardLayout = [['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'], ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'], ['ENTER', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', 'BACK']];\n  const keyColors = useMemo(() => {\n    const colors = {};\n    keyboardLayout.flat().forEach((key, index) => {\n      colors[key] = keyboardColors[index % keyboardColors.length];\n    });\n    return colors;\n  }, []);\n  const triggerConfetti = () => {\n    const end = Date.now() + 3.5 * 1000;\n    const colors = [\"#a786ff\", \"#fd8bbc\", \"#eca184\", \"#f8deb1\"];\n    const frame = () => {\n      if (Date.now() > end) return;\n      confetti({\n        particleCount: 2,\n        angle: 60,\n        spread: 55,\n        startVelocity: 60,\n        origin: {\n          x: 0,\n          y: 0.5\n        },\n        colors: colors\n      });\n      confetti({\n        particleCount: 2,\n        angle: 120,\n        spread: 55,\n        startVelocity: 60,\n        origin: {\n          x: 1,\n          y: 0.5\n        },\n        colors: colors\n      });\n      requestAnimationFrame(frame);\n    };\n    frame();\n  };\n  const playGameplaySound = () => {\n    if (isSoundOn) {\n      gameplayAudio.currentTime = 0;\n      gameplayAudio.play();\n    }\n  };\n  const playGameoverSound = () => {\n    if (isSoundOn) {\n      gameoverAudio.currentTime = 0;\n      gameoverAudio.play();\n    }\n  };\n  const playGamewinSound = () => {\n    if (isSoundOn) {\n      gamewinAudio.currentTime = 0;\n      gamewinAudio.play();\n    }\n  };\n  const toggleSound = () => {\n    setIsSoundOn(!isSoundOn);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sound-toggle\",\n      onClick: toggleSound,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isSoundOn ? soundOnIcon : soundOffIcon,\n        alt: \"Toggle sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [guesses.map((guess, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: WORD_LENGTH\n        }).map((_, j) => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"cell\",\n          initial: {\n            scale: 1\n          },\n          animate: {\n            scale: [1, 1.1, 1],\n            rotate: [0, 10, -10, 0],\n            backgroundColor: guess ? evaluateGuess(guess, correctWord)[j] === 'correct' ? '#6aaa64' : evaluateGuess(guess, correctWord)[j] === 'present' ? '#c9b458' : '#3a3a3c' : 'transparent',\n            color: guess ? '#fff' : '#fff'\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: guess[j] || ''\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: WORD_LENGTH\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"cell\",\n          initial: {\n            scale: 1\n          },\n          animate: {\n            scale: currentGuess[i] ? [1, 1.1, 1] : 1\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: currentGuess[i] || ''\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: keyboardLayout.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-row\",\n        children: row.map(key => /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"key\",\n          \"data-key\": key,\n          \"data-special-key\": key === \"ENTER\" || key === \"BACK\" ? \"true\" : \"false\",\n          style: {\n            backgroundColor: keyColors[key]\n          },\n          whileHover: {\n            scale: 1.1\n          },\n          whileTap: {\n            scale: 0.9\n          },\n          onClick: () => handleKeyPress(key),\n          children: key === \"ENTER\" ? \"Enter\" : key === \"BACK\" ? \"âŒ«\" : key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Wordle, \"LxJQD2TXHmXVC0ebUJgQ1WAQ5nY=\");\n_c = Wordle;\nexport default Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","motion","confetti","generateWordSet","evaluateGuess","gameplaySound","gameoverSound","gamewinSound","soundOnIcon","soundOffIcon","jsxDEV","_jsxDEV","WORD_LENGTH","MAX_GUESSES","keyboardColors","Wordle","_s","wordSet","setWordSet","Set","correctWord","setCorrectWord","guesses","setGuesses","Array","fill","currentGuess","setCurrentGuess","gameOver","setGameOver","loading","setLoading","isSoundOn","setIsSoundOn","gameplayAudio","Audio","gameoverAudio","gamewinAudio","loop","pause","play","catch","error","console","fetchWord","todaysWord","handleKeyPress","key","length","has","toUpperCase","alert","newGuesses","findIndex","guess","triggerConfetti","playGamewinSound","playGameoverSound","playGameplaySound","prev","slice","match","handleKeyDown","event","window","addEventListener","removeEventListener","keyboardLayout","keyColors","colors","flat","forEach","index","end","Date","now","frame","particleCount","angle","spread","startVelocity","origin","x","y","requestAnimationFrame","currentTime","toggleSound","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","map","i","from","_","j","div","initial","scale","animate","rotate","backgroundColor","color","transition","duration","row","button","style","whileHover","whileTap","_c","$RefreshReg$"],"sources":["/home/chirag/Documents/GitHub/wordle/src/Wordle.jsx"],"sourcesContent":["// Wordle.jsx\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport confetti from 'canvas-confetti';\nimport { generateWordSet, evaluateGuess } from './gameLogic';\nimport './Wordle.css';\n\nimport gameplaySound from './assets/gameplay.mp3';\nimport gameoverSound from './assets/gameover.mp3';\nimport gamewinSound from './assets/gamewin.mp3';\n\nimport soundOnIcon from './assets/sound-on.svg';\nimport soundOffIcon from './assets/sound-off.svg';\n\nconst WORD_LENGTH = 5;\nconst MAX_GUESSES = 6;\n\nconst keyboardColors = [\n  '#FF0000', '#FF3300', '#FF6600', '#FF9900', '#FFCC00', \n  '#FFFF00', '#CCFF00', '#99FF00', '#66FF00', '#33FF00'\n];\n\nconst Wordle = () => {\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState('');\n  const [guesses, setGuesses] = useState(Array(MAX_GUESSES).fill(''));\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const [isSoundOn, setIsSoundOn] = useState(false);\n  const [gameplayAudio] = useState(new Audio(gameplaySound));\n  const [gameoverAudio] = useState(new Audio(gameoverSound));\n  const [gamewinAudio] = useState(new Audio(gamewinSound));\n\n  useEffect(() => {\n    gameplayAudio.loop = true;\n    return () => {\n      gameplayAudio.pause();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isSoundOn) {\n      gameplayAudio.play().catch(error => console.error('Failed to play gameplay audio:', error));\n    } else {\n      gameplayAudio.pause();\n    }\n  }, [isSoundOn]);\n\n  useEffect(() => {\n    const fetchWord = async () => {\n      setLoading(true);\n      const { wordSet, todaysWord } = await generateWordSet();\n      setWordSet(wordSet);\n      setCorrectWord(todaysWord);\n      setLoading(false);\n    };\n\n    fetchWord();\n  }, []);\n\n  const handleKeyPress = useCallback((key) => {\n    if (gameOver || loading) return;\n\n    if (key === 'ENTER' || key === 'Enter') {\n      if (currentGuess.length !== WORD_LENGTH) return;\n      if (!wordSet.has(currentGuess.toUpperCase())) {\n        alert('Not in word list');\n        return;\n      }\n\n      const newGuesses = [...guesses];\n      newGuesses[guesses.findIndex(guess => guess === '')] = currentGuess.toUpperCase();\n      setGuesses(newGuesses);\n      setCurrentGuess('');\n\n      if (currentGuess.toUpperCase() === correctWord) {\n        setGameOver(true);\n        triggerConfetti();\n        playGamewinSound();\n        alert('You won!');\n      } else if (newGuesses[MAX_GUESSES - 1] !== '') {\n        setGameOver(true);\n        playGameoverSound();\n        alert(`Game over! The word was ${correctWord}`);\n      } else {\n        playGameplaySound();\n      }\n    } else if (key === 'BACK' || key === 'Backspace') {\n      setCurrentGuess(prev => prev.slice(0, -1));\n    } else if (currentGuess.length < WORD_LENGTH && key.length === 1 && key.match(/[a-z]/i)) {\n      setCurrentGuess(prev => prev + key.toUpperCase());\n    }\n  }, [currentGuess, guesses, wordSet, correctWord, gameOver, loading]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      handleKeyPress(event.key);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyPress]);\n\n  const keyboardLayout = [\n    ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'],\n    ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'],\n    ['ENTER', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', 'BACK']\n  ];\n\n  const keyColors = useMemo(() => {\n    const colors = {};\n    keyboardLayout.flat().forEach((key, index) => {\n      colors[key] = keyboardColors[index % keyboardColors.length];\n    });\n    return colors;\n  }, []);\n\n  const triggerConfetti = () => {\n    const end = Date.now() + 3.5 * 1000;\n    const colors = [\"#a786ff\", \"#fd8bbc\", \"#eca184\", \"#f8deb1\"];\n\n    const frame = () => {\n      if (Date.now() > end) return;\n\n      confetti({\n        particleCount: 2,\n        angle: 60,\n        spread: 55,\n        startVelocity: 60,\n        origin: { x: 0, y: 0.5 },\n        colors: colors,\n      });\n      confetti({\n        particleCount: 2,\n        angle: 120,\n        spread: 55,\n        startVelocity: 60,\n        origin: { x: 1, y: 0.5 },\n        colors: colors,\n      });\n\n      requestAnimationFrame(frame);\n    };\n\n    frame();\n  };\n\n  const playGameplaySound = () => {\n    if (isSoundOn) {\n      gameplayAudio.currentTime = 0;\n      gameplayAudio.play();\n    }\n  };\n\n  const playGameoverSound = () => {\n    if (isSoundOn) {\n      gameoverAudio.currentTime = 0;\n      gameoverAudio.play();\n    }\n  };\n\n  const playGamewinSound = () => {\n    if (isSoundOn) {\n      gamewinAudio.currentTime = 0;\n      gamewinAudio.play();\n    }\n  };\n\n  const toggleSound = () => {\n    setIsSoundOn(!isSoundOn);\n  };\n\n  if (loading) {\n    return <div className=\"container\"><h1 className=\"title\">Loading...</h1></div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Wordle Clone</h1>\n      <button className=\"sound-toggle\" onClick={toggleSound}>\n        <img src={isSoundOn ? soundOnIcon : soundOffIcon} alt=\"Toggle sound\" />\n      </button>\n      <div className=\"grid\">\n        {guesses.map((guess, i) => (\n          <div className=\"row\" key={i}>\n            {Array.from({ length: WORD_LENGTH }).map((_, j) => (\n              <motion.div\n                className=\"cell\"\n                key={j}\n                initial={{ scale: 1 }}\n                animate={{\n                  scale: [1, 1.1, 1],\n                  rotate: [0, 10, -10, 0],\n                  backgroundColor: guess\n                    ? evaluateGuess(guess, correctWord)[j] === 'correct'\n                      ? '#6aaa64'\n                      : evaluateGuess(guess, correctWord)[j] === 'present'\n                      ? '#c9b458'\n                      : '#3a3a3c'\n                    : 'transparent',\n                  color: guess ? '#fff' : '#fff',\n                }}\n                transition={{ duration: 0.3 }}\n              >\n                {guess[j] || ''}\n              </motion.div>\n            ))}\n          </div>\n        ))}\n        <div className=\"row\">\n          {Array.from({ length: WORD_LENGTH }).map((_, i) => (\n            <motion.div\n              className=\"cell\"\n              key={i}\n              initial={{ scale: 1 }}\n              animate={{ scale: currentGuess[i] ? [1, 1.1, 1] : 1 }}\n              transition={{ duration: 0.3 }}\n            >\n              {currentGuess[i] || ''}\n            </motion.div>\n          ))}\n        </div>\n      </div>\n      <div className=\"keyboard\">\n        {keyboardLayout.map((row, i) => (\n          <div className=\"keyboard-row\" key={i}>\n            {row.map((key) => (\n              <motion.button\n                className=\"key\"\n                key={key}\n                data-key={key}\n                data-special-key={key === \"ENTER\" || key === \"BACK\" ? \"true\" : \"false\"}\n                style={{ backgroundColor: keyColors[key] }}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                onClick={() => handleKeyPress(key)}\n              >\n                {key === \"ENTER\" ? \"Enter\" : key === \"BACK\" ? \"âŒ«\" : key}\n              </motion.button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Wordle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}