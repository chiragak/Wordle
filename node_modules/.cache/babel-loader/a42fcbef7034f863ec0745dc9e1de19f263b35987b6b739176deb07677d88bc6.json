{"ast":null,"code":"// gameLogic.js\n\nexport const generateWordSet = async () => {\n  const wordSet = new Set();\n  const fiveLetterWords = [\"apple\", \"brick\", \"crane\", \"dough\", \"eagle\"]; // Example words\n\n  fiveLetterWords.forEach(word => wordSet.add(word.toUpperCase()));\n  const todaysWord = fiveLetterWords[Math.floor(Math.random() * fiveLetterWords.length)].toUpperCase();\n  return {\n    wordSet,\n    todaysWord\n  };\n};\nexport const evaluateGuess = (guess, correctWord) => {\n  const result = Array(guess.length).fill('');\n  for (let i = 0; i < guess.length; i++) {\n    if (guess[i] === correctWord[i]) {\n      result[i] = 'correct';\n    } else if (correctWord.includes(guess[i])) {\n      result[i] = 'present';\n    } else {\n      result[i] = 'absent';\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["generateWordSet","wordSet","Set","fiveLetterWords","forEach","word","add","toUpperCase","todaysWord","Math","floor","random","length","evaluateGuess","guess","correctWord","result","Array","fill","i","includes"],"sources":["/home/chirag/Documents/GitHub/wordle/src/gameLogic.jsx"],"sourcesContent":["// gameLogic.js\n\nexport const generateWordSet = async () => {\n  const wordSet = new Set();\n  const fiveLetterWords = [\"apple\", \"brick\", \"crane\", \"dough\", \"eagle\"]; // Example words\n\n  fiveLetterWords.forEach(word => wordSet.add(word.toUpperCase()));\n\n  const todaysWord = fiveLetterWords[Math.floor(Math.random() * fiveLetterWords.length)].toUpperCase();\n\n  return { wordSet, todaysWord };\n};\n\nexport const evaluateGuess = (guess, correctWord) => {\n  const result = Array(guess.length).fill('');\n\n  for (let i = 0; i < guess.length; i++) {\n    if (guess[i] === correctWord[i]) {\n      result[i] = 'correct';\n    } else if (correctWord.includes(guess[i])) {\n      result[i] = 'present';\n    } else {\n      result[i] = 'absent';\n    }\n  }\n\n  return result;\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB,MAAMC,eAAe,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;EAEvEA,eAAe,CAACC,OAAO,CAACC,IAAI,IAAIJ,OAAO,CAACK,GAAG,CAACD,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;EAEhE,MAAMC,UAAU,GAAGL,eAAe,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,eAAe,CAACS,MAAM,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;EAEpG,OAAO;IAAEN,OAAO;IAAEO;EAAW,CAAC;AAChC,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAAK;EACnD,MAAMC,MAAM,GAAGC,KAAK,CAACH,KAAK,CAACF,MAAM,CAAC,CAACM,IAAI,CAAC,EAAE,CAAC;EAE3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACF,MAAM,EAAEO,CAAC,EAAE,EAAE;IACrC,IAAIL,KAAK,CAACK,CAAC,CAAC,KAAKJ,WAAW,CAACI,CAAC,CAAC,EAAE;MAC/BH,MAAM,CAACG,CAAC,CAAC,GAAG,SAAS;IACvB,CAAC,MAAM,IAAIJ,WAAW,CAACK,QAAQ,CAACN,KAAK,CAACK,CAAC,CAAC,CAAC,EAAE;MACzCH,MAAM,CAACG,CAAC,CAAC,GAAG,SAAS;IACvB,CAAC,MAAM;MACLH,MAAM,CAACG,CAAC,CAAC,GAAG,QAAQ;IACtB;EACF;EAEA,OAAOH,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}