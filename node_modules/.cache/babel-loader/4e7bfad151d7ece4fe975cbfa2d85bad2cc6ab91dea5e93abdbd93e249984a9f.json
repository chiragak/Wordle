{"ast":null,"code":"// src/gameLogic.js\n\nconst WORD_LENGTH = 5;\nconst VALID_WORDS = ['APPLE', 'BEACH', 'CRIME', 'DREAM', 'ERROR', 'FLASH', 'GREEN', 'HAPPY', 'IMAGE', 'JUDGE'];\nexport function generateWordSet() {\n  const chosenWord = VALID_WORDS[Math.floor(Math.random() * VALID_WORDS.length)];\n  const wordSet = new Set(chosenWord);\n  return wordSet;\n}\nexport function evaluateGuess(guess, wordSet) {\n  const guessArray = guess.toUpperCase().split('');\n  let correctCount = 0;\n  let misplacedCount = 0;\n\n  // Count correct positions\n  for (let i = 0; i < WORD_LENGTH; i++) {\n    if (guessArray[i] === [...wordSet][i]) {\n      correctCount++;\n    } else if (wordSet.has(guessArray[i])) {\n      misplacedCount++;\n    }\n  }\n  return {\n    correctCount,\n    misplacedCount\n  };\n}","map":{"version":3,"names":["WORD_LENGTH","VALID_WORDS","generateWordSet","chosenWord","Math","floor","random","length","wordSet","Set","evaluateGuess","guess","guessArray","toUpperCase","split","correctCount","misplacedCount","i","has"],"sources":["/home/chirag/Documents/GitHub/wordle/src/gameLogic.js"],"sourcesContent":["// src/gameLogic.js\n\nconst WORD_LENGTH = 5;\nconst VALID_WORDS = [\n  'APPLE', 'BEACH', 'CRIME', 'DREAM', 'ERROR',\n  'FLASH', 'GREEN', 'HAPPY', 'IMAGE', 'JUDGE'\n];\n\nexport function generateWordSet() {\n  const chosenWord = VALID_WORDS[Math.floor(Math.random() * VALID_WORDS.length)];\n  const wordSet = new Set(chosenWord);\n  return wordSet;\n}\n\nexport function evaluateGuess(guess, wordSet) {\n  const guessArray = guess.toUpperCase().split('');\n  let correctCount = 0;\n  let misplacedCount = 0;\n\n  // Count correct positions\n  for (let i = 0; i < WORD_LENGTH; i++) {\n    if (guessArray[i] === [...wordSet][i]) {\n      correctCount++;\n    } else if (wordSet.has(guessArray[i])) {\n      misplacedCount++;\n    }\n  }\n\n  return { correctCount, misplacedCount };\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAG,CAAC;AACrB,MAAMC,WAAW,GAAG,CAClB,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAC3C,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAC5C;AAED,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,MAAMC,UAAU,GAAGF,WAAW,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,WAAW,CAACM,MAAM,CAAC,CAAC;EAC9E,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAACN,UAAU,CAAC;EACnC,OAAOK,OAAO;AAChB;AAEA,OAAO,SAASE,aAAaA,CAACC,KAAK,EAAEH,OAAO,EAAE;EAC5C,MAAMI,UAAU,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC;EAChD,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,cAAc,GAAG,CAAC;;EAEtB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,WAAW,EAAEiB,CAAC,EAAE,EAAE;IACpC,IAAIL,UAAU,CAACK,CAAC,CAAC,KAAK,CAAC,GAAGT,OAAO,CAAC,CAACS,CAAC,CAAC,EAAE;MACrCF,YAAY,EAAE;IAChB,CAAC,MAAM,IAAIP,OAAO,CAACU,GAAG,CAACN,UAAU,CAACK,CAAC,CAAC,CAAC,EAAE;MACrCD,cAAc,EAAE;IAClB;EACF;EAEA,OAAO;IAAED,YAAY;IAAEC;EAAe,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}